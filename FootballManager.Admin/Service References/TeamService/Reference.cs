//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FootballManager.Admin.TeamService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TeamService.ITeamService")]
    public interface ITeamService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddTeam", ReplyAction="http://tempuri.org/ITeamService/AddTeamResponse")]
        void AddTeam(Domain.Entities.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddTeam", ReplyAction="http://tempuri.org/ITeamService/AddTeamResponse")]
        System.Threading.Tasks.Task AddTeamAsync(Domain.Entities.Team team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddExposableTeam", ReplyAction="http://tempuri.org/ITeamService/AddExposableTeamResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ArenaName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.ArenaName>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.EmailAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.EmailAddress>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.TeamName>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ShirtNumbers))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.ShirtNumbers>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.AggregatedTeamEvents))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamEvents))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDateAndTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDateAndTime>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDuration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDuration>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.GameProtocol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.GameProtocol>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Assist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Assist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Assist>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchMinute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchMinute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Card[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Card>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Goal[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Goal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Goal>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.OverTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.OverTime>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Penalty[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Penalty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Penalty>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.GameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.GameResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamMatchSchedule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.AggregatedTeamStats))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamStats))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Game[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Game))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CardType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Value_Objects.TeamEvents>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Entities.Match[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Value_Objects.TeamStats>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.StringComparison))]
        void AddExposableTeam(object team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddExposableTeam", ReplyAction="http://tempuri.org/ITeamService/AddExposableTeamResponse")]
        System.Threading.Tasks.Task AddExposableTeamAsync(object team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddTeamFromList", ReplyAction="http://tempuri.org/ITeamService/AddTeamFromListResponse")]
        void AddTeamFromList(Domain.Entities.Team[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddTeamFromList", ReplyAction="http://tempuri.org/ITeamService/AddTeamFromListResponse")]
        System.Threading.Tasks.Task AddTeamFromListAsync(Domain.Entities.Team[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddExposableTeamFromList", ReplyAction="http://tempuri.org/ITeamService/AddExposableTeamFromListResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ArenaName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.ArenaName>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.EmailAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.EmailAddress>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.TeamName>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ShirtNumbers))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.ShirtNumbers>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.AggregatedTeamEvents))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamEvents))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDateAndTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDateAndTime>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDuration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDuration>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.GameProtocol))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.GameProtocol>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Assist[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Assist))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Assist>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchMinute))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchMinute>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Card[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Card))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Card>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Goal[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Goal))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Goal>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.OverTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.OverTime>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Penalty[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.Penalty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.Penalty>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.GameResult))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.GameResult>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamMatchSchedule))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.AggregatedTeamStats))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.TeamStats))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Team))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Game[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Game))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Team[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CardType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, bool>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Value_Objects.TeamEvents>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Entities.Match[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<System.Guid, Domain.Value_Objects.TeamStats>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(object[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.StringComparison))]
        void AddExposableTeamFromList(object[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/AddExposableTeamFromList", ReplyAction="http://tempuri.org/ITeamService/AddExposableTeamFromListResponse")]
        System.Threading.Tasks.Task AddExposableTeamFromListAsync(object[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/FindById", ReplyAction="http://tempuri.org/ITeamService/FindByIdResponse")]
        Domain.Entities.Team FindById(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/FindById", ReplyAction="http://tempuri.org/ITeamService/FindByIdResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Team> FindByIdAsync(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetAll", ReplyAction="http://tempuri.org/ITeamService/GetAllResponse")]
        Domain.Entities.Team[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetAll", ReplyAction="http://tempuri.org/ITeamService/GetAllResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Team[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamEventsInSeries", ReplyAction="http://tempuri.org/ITeamService/GetTeamEventsInSeriesResponse")]
        Domain.Value_Objects.TeamEvents GetTeamEventsInSeries(System.Guid teamId, System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamEventsInSeries", ReplyAction="http://tempuri.org/ITeamService/GetTeamEventsInSeriesResponse")]
        System.Threading.Tasks.Task<Domain.Value_Objects.TeamEvents> GetTeamEventsInSeriesAsync(System.Guid teamId, System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamSchedule", ReplyAction="http://tempuri.org/ITeamService/GetTeamScheduleResponse")]
        Domain.Entities.Match[] GetTeamSchedule(System.Guid teamId, System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamSchedule", ReplyAction="http://tempuri.org/ITeamService/GetTeamScheduleResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Match[]> GetTeamScheduleAsync(System.Guid teamId, System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamsOfSerie", ReplyAction="http://tempuri.org/ITeamService/GetTeamsOfSerieResponse")]
        Domain.Entities.Team[] GetTeamsOfSerie(System.Guid sereisId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamsOfSerie", ReplyAction="http://tempuri.org/ITeamService/GetTeamsOfSerieResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Team[]> GetTeamsOfSerieAsync(System.Guid sereisId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamStatsInSeries", ReplyAction="http://tempuri.org/ITeamService/GetTeamStatsInSeriesResponse")]
        Domain.Value_Objects.TeamStats GetTeamStatsInSeries(System.Guid seriesId, System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamStatsInSeries", ReplyAction="http://tempuri.org/ITeamService/GetTeamStatsInSeriesResponse")]
        System.Threading.Tasks.Task<Domain.Value_Objects.TeamStats> GetTeamStatsInSeriesAsync(System.Guid seriesId, System.Guid teamId);
        
        // CODEGEN: Generating message contract since the wrapper name (GetTeamStatsInseries) of message GetTeamStatsInseriesRequest does not match the default value (GetTeamStatsInseries1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamStatsInseries", ReplyAction="http://tempuri.org/ITeamService/GetTeamStatsInseriesResponse")]
        FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse GetTeamStatsInseries1(FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/GetTeamStatsInseries", ReplyAction="http://tempuri.org/ITeamService/GetTeamStatsInseriesResponse")]
        System.Threading.Tasks.Task<FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse> GetTeamStatsInseries1Async(FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/Search", ReplyAction="http://tempuri.org/ITeamService/SearchResponse")]
        Domain.Entities.Team[] Search(string searchText, System.StringComparison comparison);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITeamService/Search", ReplyAction="http://tempuri.org/ITeamService/SearchResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Team[]> SearchAsync(string searchText, System.StringComparison comparison);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTeamStatsInseries", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTeamStatsInseriesRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Guid teamId;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Guid seriesId;
        
        public GetTeamStatsInseriesRequest() {
        }
        
        public GetTeamStatsInseriesRequest(System.Guid teamId, System.Guid seriesId) {
            this.teamId = teamId;
            this.seriesId = seriesId;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTeamStatsInseriesResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetTeamStatsInseriesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Domain.Value_Objects.TeamStats GetTeamStatsInseriesResult;
        
        public GetTeamStatsInseriesResponse() {
        }
        
        public GetTeamStatsInseriesResponse(Domain.Value_Objects.TeamStats GetTeamStatsInseriesResult) {
            this.GetTeamStatsInseriesResult = GetTeamStatsInseriesResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITeamServiceChannel : FootballManager.Admin.TeamService.ITeamService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TeamServiceClient : System.ServiceModel.ClientBase<FootballManager.Admin.TeamService.ITeamService>, FootballManager.Admin.TeamService.ITeamService {
        
        public TeamServiceClient() {
        }
        
        public TeamServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TeamServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeamServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TeamServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddTeam(Domain.Entities.Team team) {
            base.Channel.AddTeam(team);
        }
        
        public System.Threading.Tasks.Task AddTeamAsync(Domain.Entities.Team team) {
            return base.Channel.AddTeamAsync(team);
        }
        
        public void AddExposableTeam(object team) {
            base.Channel.AddExposableTeam(team);
        }
        
        public System.Threading.Tasks.Task AddExposableTeamAsync(object team) {
            return base.Channel.AddExposableTeamAsync(team);
        }
        
        public void AddTeamFromList(Domain.Entities.Team[] teams) {
            base.Channel.AddTeamFromList(teams);
        }
        
        public System.Threading.Tasks.Task AddTeamFromListAsync(Domain.Entities.Team[] teams) {
            return base.Channel.AddTeamFromListAsync(teams);
        }
        
        public void AddExposableTeamFromList(object[] teams) {
            base.Channel.AddExposableTeamFromList(teams);
        }
        
        public System.Threading.Tasks.Task AddExposableTeamFromListAsync(object[] teams) {
            return base.Channel.AddExposableTeamFromListAsync(teams);
        }
        
        public Domain.Entities.Team FindById(System.Guid teamId) {
            return base.Channel.FindById(teamId);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Team> FindByIdAsync(System.Guid teamId) {
            return base.Channel.FindByIdAsync(teamId);
        }
        
        public Domain.Entities.Team[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Team[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public Domain.Value_Objects.TeamEvents GetTeamEventsInSeries(System.Guid teamId, System.Guid seriesId) {
            return base.Channel.GetTeamEventsInSeries(teamId, seriesId);
        }
        
        public System.Threading.Tasks.Task<Domain.Value_Objects.TeamEvents> GetTeamEventsInSeriesAsync(System.Guid teamId, System.Guid seriesId) {
            return base.Channel.GetTeamEventsInSeriesAsync(teamId, seriesId);
        }
        
        public Domain.Entities.Match[] GetTeamSchedule(System.Guid teamId, System.Guid seriesId) {
            return base.Channel.GetTeamSchedule(teamId, seriesId);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Match[]> GetTeamScheduleAsync(System.Guid teamId, System.Guid seriesId) {
            return base.Channel.GetTeamScheduleAsync(teamId, seriesId);
        }
        
        public Domain.Entities.Team[] GetTeamsOfSerie(System.Guid sereisId) {
            return base.Channel.GetTeamsOfSerie(sereisId);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Team[]> GetTeamsOfSerieAsync(System.Guid sereisId) {
            return base.Channel.GetTeamsOfSerieAsync(sereisId);
        }
        
        public Domain.Value_Objects.TeamStats GetTeamStatsInSeries(System.Guid seriesId, System.Guid teamId) {
            return base.Channel.GetTeamStatsInSeries(seriesId, teamId);
        }
        
        public System.Threading.Tasks.Task<Domain.Value_Objects.TeamStats> GetTeamStatsInSeriesAsync(System.Guid seriesId, System.Guid teamId) {
            return base.Channel.GetTeamStatsInSeriesAsync(seriesId, teamId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse FootballManager.Admin.TeamService.ITeamService.GetTeamStatsInseries1(FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest request) {
            return base.Channel.GetTeamStatsInseries1(request);
        }
        
        public Domain.Value_Objects.TeamStats GetTeamStatsInseries1(System.Guid teamId, System.Guid seriesId) {
            FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest inValue = new FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest();
            inValue.teamId = teamId;
            inValue.seriesId = seriesId;
            FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse retVal = ((FootballManager.Admin.TeamService.ITeamService)(this)).GetTeamStatsInseries1(inValue);
            return retVal.GetTeamStatsInseriesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse> FootballManager.Admin.TeamService.ITeamService.GetTeamStatsInseries1Async(FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest request) {
            return base.Channel.GetTeamStatsInseries1Async(request);
        }
        
        public System.Threading.Tasks.Task<FootballManager.Admin.TeamService.GetTeamStatsInseriesResponse> GetTeamStatsInseries1Async(System.Guid teamId, System.Guid seriesId) {
            FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest inValue = new FootballManager.Admin.TeamService.GetTeamStatsInseriesRequest();
            inValue.teamId = teamId;
            inValue.seriesId = seriesId;
            return ((FootballManager.Admin.TeamService.ITeamService)(this)).GetTeamStatsInseries1Async(inValue);
        }
        
        public Domain.Entities.Team[] Search(string searchText, System.StringComparison comparison) {
            return base.Channel.Search(searchText, comparison);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Team[]> SearchAsync(string searchText, System.StringComparison comparison) {
            return base.Channel.SearchAsync(searchText, comparison);
        }
    }
}
