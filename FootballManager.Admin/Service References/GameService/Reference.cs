//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FootballManager.Admin.GameService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GameService.IGameService")]
    public interface IGameService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGameFromList", ReplyAction="http://tempuri.org/IGameService/AddGameFromListResponse")]
        void AddGameFromList(Domain.Entities.Game[] games);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGameFromList", ReplyAction="http://tempuri.org/IGameService/AddGameFromListResponse")]
        System.Threading.Tasks.Task AddGameFromListAsync(Domain.Entities.Game[] games);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGameFromMatchId", ReplyAction="http://tempuri.org/IGameService/AddGameFromMatchIdResponse")]
        System.Guid AddGameFromMatchId(System.Guid matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGameFromMatchId", ReplyAction="http://tempuri.org/IGameService/AddGameFromMatchIdResponse")]
        System.Threading.Tasks.Task<System.Guid> AddGameFromMatchIdAsync(System.Guid matchId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGame", ReplyAction="http://tempuri.org/IGameService/AddGameResponse")]
        void AddGame(Domain.Entities.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGame", ReplyAction="http://tempuri.org/IGameService/AddGameResponse")]
        System.Threading.Tasks.Task AddGameAsync(Domain.Entities.Game game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddAssistToGame", ReplyAction="http://tempuri.org/IGameService/AddAssistToGameResponse")]
        void AddAssistToGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddAssistToGame", ReplyAction="http://tempuri.org/IGameService/AddAssistToGameResponse")]
        System.Threading.Tasks.Task AddAssistToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGoalToGame", ReplyAction="http://tempuri.org/IGameService/AddGoalToGameResponse")]
        void AddGoalToGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddGoalToGame", ReplyAction="http://tempuri.org/IGameService/AddGoalToGameResponse")]
        System.Threading.Tasks.Task AddGoalToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddList", ReplyAction="http://tempuri.org/IGameService/AddListResponse")]
        System.Guid[] AddList(System.Guid[] matchIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddList", ReplyAction="http://tempuri.org/IGameService/AddListResponse")]
        System.Threading.Tasks.Task<System.Guid[]> AddListAsync(System.Guid[] matchIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddPenaltyToGame", ReplyAction="http://tempuri.org/IGameService/AddPenaltyToGameResponse")]
        void AddPenaltyToGame(System.Guid gameId, System.Guid playerId, int matchMinute, bool isGoal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddPenaltyToGame", ReplyAction="http://tempuri.org/IGameService/AddPenaltyToGameResponse")]
        System.Threading.Tasks.Task AddPenaltyToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute, bool isGoal);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddRedCardToGame", ReplyAction="http://tempuri.org/IGameService/AddRedCardToGameResponse")]
        void AddRedCardToGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddRedCardToGame", ReplyAction="http://tempuri.org/IGameService/AddRedCardToGameResponse")]
        System.Threading.Tasks.Task AddRedCardToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddYellowCardToGame", ReplyAction="http://tempuri.org/IGameService/AddYellowCardToGameResponse")]
        void AddYellowCardToGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/AddYellowCardToGame", ReplyAction="http://tempuri.org/IGameService/AddYellowCardToGameResponse")]
        System.Threading.Tasks.Task AddYellowCardToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/FindById", ReplyAction="http://tempuri.org/IGameService/FindByIdResponse")]
        Domain.Entities.Game FindById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/FindById", ReplyAction="http://tempuri.org/IGameService/FindByIdResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Game> FindByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAll", ReplyAction="http://tempuri.org/IGameService/GetAllResponse")]
        Domain.Entities.Game[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/GetAll", ReplyAction="http://tempuri.org/IGameService/GetAllResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Game[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveAssistFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveAssistFromGameResponse")]
        void RemoveAssistFromGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveAssistFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveAssistFromGameResponse")]
        System.Threading.Tasks.Task RemoveAssistFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveGoalFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveGoalFromGameResponse")]
        void RemoveGoalFromGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveGoalFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveGoalFromGameResponse")]
        System.Threading.Tasks.Task RemoveGoalFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemovePenaltyFromGame", ReplyAction="http://tempuri.org/IGameService/RemovePenaltyFromGameResponse")]
        void RemovePenaltyFromGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemovePenaltyFromGame", ReplyAction="http://tempuri.org/IGameService/RemovePenaltyFromGameResponse")]
        System.Threading.Tasks.Task RemovePenaltyFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveRedCardFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveRedCardFromGameResponse")]
        void RemoveRedCardFromGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveRedCardFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveRedCardFromGameResponse")]
        System.Threading.Tasks.Task RemoveRedCardFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveYellowCardFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveYellowCardFromGameResponse")]
        void RemoveYellowCardFromGame(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/RemoveYellowCardFromGame", ReplyAction="http://tempuri.org/IGameService/RemoveYellowCardFromGameResponse")]
        System.Threading.Tasks.Task RemoveYellowCardFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Search", ReplyAction="http://tempuri.org/IGameService/SearchResponse")]
        Domain.Entities.Game[] Search(string searchText, System.StringComparison comparison);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameService/Search", ReplyAction="http://tempuri.org/IGameService/SearchResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Game[]> SearchAsync(string searchText, System.StringComparison comparison);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameServiceChannel : FootballManager.Admin.GameService.IGameService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameServiceClient : System.ServiceModel.ClientBase<FootballManager.Admin.GameService.IGameService>, FootballManager.Admin.GameService.IGameService {
        
        public GameServiceClient() {
        }
        
        public GameServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddGameFromList(Domain.Entities.Game[] games) {
            base.Channel.AddGameFromList(games);
        }
        
        public System.Threading.Tasks.Task AddGameFromListAsync(Domain.Entities.Game[] games) {
            return base.Channel.AddGameFromListAsync(games);
        }
        
        public System.Guid AddGameFromMatchId(System.Guid matchId) {
            return base.Channel.AddGameFromMatchId(matchId);
        }
        
        public System.Threading.Tasks.Task<System.Guid> AddGameFromMatchIdAsync(System.Guid matchId) {
            return base.Channel.AddGameFromMatchIdAsync(matchId);
        }
        
        public void AddGame(Domain.Entities.Game game) {
            base.Channel.AddGame(game);
        }
        
        public System.Threading.Tasks.Task AddGameAsync(Domain.Entities.Game game) {
            return base.Channel.AddGameAsync(game);
        }
        
        public void AddAssistToGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.AddAssistToGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task AddAssistToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.AddAssistToGameAsync(gameId, playerId, matchMinute);
        }
        
        public void AddGoalToGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.AddGoalToGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task AddGoalToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.AddGoalToGameAsync(gameId, playerId, matchMinute);
        }
        
        public System.Guid[] AddList(System.Guid[] matchIds) {
            return base.Channel.AddList(matchIds);
        }
        
        public System.Threading.Tasks.Task<System.Guid[]> AddListAsync(System.Guid[] matchIds) {
            return base.Channel.AddListAsync(matchIds);
        }
        
        public void AddPenaltyToGame(System.Guid gameId, System.Guid playerId, int matchMinute, bool isGoal) {
            base.Channel.AddPenaltyToGame(gameId, playerId, matchMinute, isGoal);
        }
        
        public System.Threading.Tasks.Task AddPenaltyToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute, bool isGoal) {
            return base.Channel.AddPenaltyToGameAsync(gameId, playerId, matchMinute, isGoal);
        }
        
        public void AddRedCardToGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.AddRedCardToGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task AddRedCardToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.AddRedCardToGameAsync(gameId, playerId, matchMinute);
        }
        
        public void AddYellowCardToGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.AddYellowCardToGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task AddYellowCardToGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.AddYellowCardToGameAsync(gameId, playerId, matchMinute);
        }
        
        public Domain.Entities.Game FindById(System.Guid id) {
            return base.Channel.FindById(id);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Game> FindByIdAsync(System.Guid id) {
            return base.Channel.FindByIdAsync(id);
        }
        
        public Domain.Entities.Game[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Game[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public void RemoveAssistFromGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.RemoveAssistFromGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task RemoveAssistFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.RemoveAssistFromGameAsync(gameId, playerId, matchMinute);
        }
        
        public void RemoveGoalFromGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.RemoveGoalFromGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task RemoveGoalFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.RemoveGoalFromGameAsync(gameId, playerId, matchMinute);
        }
        
        public void RemovePenaltyFromGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.RemovePenaltyFromGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task RemovePenaltyFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.RemovePenaltyFromGameAsync(gameId, playerId, matchMinute);
        }
        
        public void RemoveRedCardFromGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.RemoveRedCardFromGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task RemoveRedCardFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.RemoveRedCardFromGameAsync(gameId, playerId, matchMinute);
        }
        
        public void RemoveYellowCardFromGame(System.Guid gameId, System.Guid playerId, int matchMinute) {
            base.Channel.RemoveYellowCardFromGame(gameId, playerId, matchMinute);
        }
        
        public System.Threading.Tasks.Task RemoveYellowCardFromGameAsync(System.Guid gameId, System.Guid playerId, int matchMinute) {
            return base.Channel.RemoveYellowCardFromGameAsync(gameId, playerId, matchMinute);
        }
        
        public Domain.Entities.Game[] Search(string searchText, System.StringComparison comparison) {
            return base.Channel.Search(searchText, comparison);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Game[]> SearchAsync(string searchText, System.StringComparison comparison) {
            return base.Channel.SearchAsync(searchText, comparison);
        }
    }
}
