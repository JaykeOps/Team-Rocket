//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FootballManager.Admin.SeriesService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SeriesService.ISeriesService")]
    public interface ISeriesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/AddSeries", ReplyAction="http://tempuri.org/ISeriesService/AddSeriesResponse")]
        void AddSeries(Domain.Entities.Series series);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/AddSeries", ReplyAction="http://tempuri.org/ISeriesService/AddSeriesResponse")]
        System.Threading.Tasks.Task AddSeriesAsync(Domain.Entities.Series series);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/AddTeamToSeries", ReplyAction="http://tempuri.org/ISeriesService/AddTeamToSeriesResponse")]
        void AddTeamToSeries(System.Guid seriesId, System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/AddTeamToSeries", ReplyAction="http://tempuri.org/ISeriesService/AddTeamToSeriesResponse")]
        System.Threading.Tasks.Task AddTeamToSeriesAsync(System.Guid seriesId, System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/DeleteSeries", ReplyAction="http://tempuri.org/ISeriesService/DeleteSeriesResponse")]
        void DeleteSeries(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/DeleteSeries", ReplyAction="http://tempuri.org/ISeriesService/DeleteSeriesResponse")]
        System.Threading.Tasks.Task DeleteSeriesAsync(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/FindById", ReplyAction="http://tempuri.org/ISeriesService/FindByIdResponse")]
        Domain.Entities.Series FindById(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/FindById", ReplyAction="http://tempuri.org/ISeriesService/FindByIdResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Series> FindByIdAsync(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/GetAll", ReplyAction="http://tempuri.org/ISeriesService/GetAllResponse")]
        Domain.Entities.Series[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/GetAll", ReplyAction="http://tempuri.org/ISeriesService/GetAllResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Series[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/GetLeagueTablePlacement", ReplyAction="http://tempuri.org/ISeriesService/GetLeagueTablePlacementResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Collections.Generic.Dictionary<int, Domain.Entities.Match[]>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.Guid[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Series))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Match))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Entities.Series[]))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(System.StringComparison))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDuration))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDuration>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.NumberOfTeams))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.NumberOfTeams>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ArenaName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.ArenaName>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.MatchDateAndTime))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.MatchDateAndTime>))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.SeriesName))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Domain.Value_Objects.ValueObject<Domain.Value_Objects.SeriesName>))]
        object GetLeagueTablePlacement(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/GetLeagueTablePlacement", ReplyAction="http://tempuri.org/ISeriesService/GetLeagueTablePlacementResponse")]
        System.Threading.Tasks.Task<object> GetLeagueTablePlacementAsync(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/RemoveTeamFromSeries", ReplyAction="http://tempuri.org/ISeriesService/RemoveTeamFromSeriesResponse")]
        void RemoveTeamFromSeries(System.Guid seriesId, System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/RemoveTeamFromSeries", ReplyAction="http://tempuri.org/ISeriesService/RemoveTeamFromSeriesResponse")]
        System.Threading.Tasks.Task RemoveTeamFromSeriesAsync(System.Guid seriesId, System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/ScheduleGenerator", ReplyAction="http://tempuri.org/ISeriesService/ScheduleGeneratorResponse")]
        void ScheduleGenerator(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/ScheduleGenerator", ReplyAction="http://tempuri.org/ISeriesService/ScheduleGeneratorResponse")]
        System.Threading.Tasks.Task ScheduleGeneratorAsync(System.Guid seriesId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/Search", ReplyAction="http://tempuri.org/ISeriesService/SearchResponse")]
        Domain.Entities.Series[] Search(string searchText, System.StringComparison comparison);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISeriesService/Search", ReplyAction="http://tempuri.org/ISeriesService/SearchResponse")]
        System.Threading.Tasks.Task<Domain.Entities.Series[]> SearchAsync(string searchText, System.StringComparison comparison);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISeriesServiceChannel : FootballManager.Admin.SeriesService.ISeriesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SeriesServiceClient : System.ServiceModel.ClientBase<FootballManager.Admin.SeriesService.ISeriesService>, FootballManager.Admin.SeriesService.ISeriesService {
        
        public SeriesServiceClient() {
        }
        
        public SeriesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SeriesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SeriesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SeriesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddSeries(Domain.Entities.Series series) {
            base.Channel.AddSeries(series);
        }
        
        public System.Threading.Tasks.Task AddSeriesAsync(Domain.Entities.Series series) {
            return base.Channel.AddSeriesAsync(series);
        }
        
        public void AddTeamToSeries(System.Guid seriesId, System.Guid teamId) {
            base.Channel.AddTeamToSeries(seriesId, teamId);
        }
        
        public System.Threading.Tasks.Task AddTeamToSeriesAsync(System.Guid seriesId, System.Guid teamId) {
            return base.Channel.AddTeamToSeriesAsync(seriesId, teamId);
        }
        
        public void DeleteSeries(System.Guid seriesId) {
            base.Channel.DeleteSeries(seriesId);
        }
        
        public System.Threading.Tasks.Task DeleteSeriesAsync(System.Guid seriesId) {
            return base.Channel.DeleteSeriesAsync(seriesId);
        }
        
        public Domain.Entities.Series FindById(System.Guid seriesId) {
            return base.Channel.FindById(seriesId);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Series> FindByIdAsync(System.Guid seriesId) {
            return base.Channel.FindByIdAsync(seriesId);
        }
        
        public Domain.Entities.Series[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Series[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public object GetLeagueTablePlacement(System.Guid seriesId) {
            return base.Channel.GetLeagueTablePlacement(seriesId);
        }
        
        public System.Threading.Tasks.Task<object> GetLeagueTablePlacementAsync(System.Guid seriesId) {
            return base.Channel.GetLeagueTablePlacementAsync(seriesId);
        }
        
        public void RemoveTeamFromSeries(System.Guid seriesId, System.Guid teamId) {
            base.Channel.RemoveTeamFromSeries(seriesId, teamId);
        }
        
        public System.Threading.Tasks.Task RemoveTeamFromSeriesAsync(System.Guid seriesId, System.Guid teamId) {
            return base.Channel.RemoveTeamFromSeriesAsync(seriesId, teamId);
        }
        
        public void ScheduleGenerator(System.Guid seriesId) {
            base.Channel.ScheduleGenerator(seriesId);
        }
        
        public System.Threading.Tasks.Task ScheduleGeneratorAsync(System.Guid seriesId) {
            return base.Channel.ScheduleGeneratorAsync(seriesId);
        }
        
        public Domain.Entities.Series[] Search(string searchText, System.StringComparison comparison) {
            return base.Channel.Search(searchText, comparison);
        }
        
        public System.Threading.Tasks.Task<Domain.Entities.Series[]> SearchAsync(string searchText, System.StringComparison comparison) {
            return base.Channel.SearchAsync(searchText, comparison);
        }
    }
}
